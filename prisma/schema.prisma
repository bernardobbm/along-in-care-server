// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
  theme    = "default"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  PRIMARY
  ASSISTENT
}

model Caregiver {
  id            String   @id @default(uuid())
  name          String
  last_name     String
  email         String   @unique
  password_hash String
  role          Role     @default(ASSISTENT)
  created_at    DateTime @default(now())

  patient    Patient? @relation(fields: [patient_id], references: [id])
  patient_id String?

  caregiverRecords CaregiverRecord[]
  caregiverCares   CaregiverCare[]

  @@map("caregivers")
}

model Patient {
  id            String @id @default(uuid())
  cpf           String @unique
  name          String
  gender        String
  date_of_birth String

  caregivers   Caregiver[]
  patientCares PatientCare[]

  @@map("patients")
}

model CaregiverCare {
  id String @id @default(uuid())

  caregiver Caregiver @relation(fields: [caregiver_id], references: [id])
  care      Care      @relation(fields: [care_id], references: [id])

  caregiver_id String
  care_id      String

  @@map("caregiver_cares")
}

model PatientCare {
  id String @id @default(uuid())

  patient Patient @relation(fields: [patient_id], references: [id])
  care    Care    @relation(fields: [care_id], references: [id])

  patient_id String
  care_id    String

  @@map("patient_cares")
}

model Care {
  id            String   @id @default(uuid())
  category      String
  title         String
  description   String
  schedule_type String
  interval      Int
  starts_at     DateTime
  ends_at       DateTime
  is_continuous Boolean

  medication   Medication?
  hygiene      Hygiene?
  alimentation Alimentation?

  patientCares   PatientCare[]
  caregiverCares CaregiverCare[]
  careWeekDays   CareWeekDay[]
  records        Record[]

  @@map("cares")
}

model Medication {
  id                   String @id @default(uuid())
  administration_route String
  quantity             Int
  unit                 String

  care    Care   @relation(fields: [care_id], references: [id])
  care_id String @unique

  @@map("medications")
}

model Hygiene {
  id              String @id @default(uuid())
  hygieneCategory String
  instructions    String

  care    Care   @relation(fields: [care_id], references: [id])
  care_id String @unique

  @@map("hygienes")
}

model Alimentation {
  id                   String @id @default(uuid())
  meal                 String
  food                 String
  not_recommended_food String

  care    Care   @relation(fields: [care_id], references: [id])
  care_id String @unique

  @@map("alimentations")
}

model CareWeekDay {
  id       String @id @default(uuid())
  week_day Int

  care    Care   @relation(fields: [care_id], references: [id])
  care_id String

  @@unique([week_day, care_id])
  @@map("care_week_days")
}

model Record {
  id                     String   @id @default(uuid())
  title                  String
  was_accomplished       Boolean
  time_of_accomplishment DateTime
  description            String
  observation            String

  caregiverRecords CaregiverRecord[]

  care    Care?  @relation(fields: [care_id], references: [id])
  care_id String

  @@map("records")
}

model CaregiverRecord {
  id String @id @default(uuid())

  caregiver Caregiver @relation(fields: [caregiver_id], references: [id])
  record    Record    @relation(fields: [record_id], references: [id])

  caregiver_id String
  record_id    String

  @@map("caregiver_records")
}
